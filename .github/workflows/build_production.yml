# Continues deployment workflow to automatically
# build latest Docker image on tag creation.
name: Build Production

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Docker with buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Login to GitHub packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Login to Lazy Bytez Registry
        uses: docker/login-action@v3
        with:
          registry: git.lazybytez.cloud
          username: ${{ secrets.GITEA_REGISTRY_USERNAME }}
          password: ${{ secrets.GITEA_REGISTRY_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/lazybytez/logrotate-container
            git.lazybytez.cloud/lazybytez/logrotate-container
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Retrieve commit SHA
        id: commit_sha
        run: |
          echo "short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      # Deploy stage image to Gitea Container Registry
      - name: Build and publish images
        uses: docker/build-push-action@v6
        id: build_push
        with:
          context: .
          file: ./Containerfile
          platforms: linux/amd64,linux/arm64
          target: production
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            image_version=${{ github.ref_name }}
            build_commit_sha=${{ steps.commit_sha.outputs.short }}
